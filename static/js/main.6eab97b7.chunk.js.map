{"version":3,"sources":["login.svg","components/Designone.jsx","components/Designtwo.jsx","components/Designthree.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Designone","props","className","src","loginImg","alt","htmlFor","type","placeholder","React","Component","Designtwo","Designthree","class","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6eab97b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.cba154e7.svg\";","import React,{useState, useEffect}from 'react'\nimport loginImg from '../login.svg';\nimport './DesignOne.css';\n export class Designone extends React.Component {\n    constructor(props){\n        super(props);\n    }\n    \n    render(){\n    return (\n            <div className=\"container-main\">\n                <div className=\"header\">\n                    Login\n                </div>\n                <div className=\"image\">\n                    <img src={loginImg} alt=\"login image\"/>\n                </div>\n                <div className=\"content\">\n                    <div className=\"form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" placeholder=\"Enter Username\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" placeholder=\"Enter Password\"/>\n                        </div>\n                    </div>\n                    <div className=\"footer\">\n                        <button className=\"btn\" >\n                           Login\n                        </button>\n                    </div>\n                    \n                </div>\n            </div>\n      \n    )\n}\n}\n\n\n","import React from 'react'\nimport loginImg from '../login.svg';\nimport './Designtwo.css';\n export class Designtwo extends React.Component {\n    constructor(props){\n        super(props);\n    }\n    render(){\n    return (\n            <div className=\"container-main2\">\n                <div className=\"header\">\n                    Register\n                </div>\n                <div className=\"image1\">\n                    <img src={loginImg} alt=\"login image\"/>\n                </div>\n                <div className=\"content\">\n                    <div className=\"form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" placeholder=\"Enter Username\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" placeholder=\"Enter Email\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" placeholder=\"Enter Password\"/>\n                        </div>\n                    </div>\n                    <div className=\"footer\">\n                        <button className=\"btn\">\n                                    Register\n                        </button>\n                    </div>\n                    \n                </div>\n            </div>\n      \n    )\n}\n}\n\n\n","import React from 'react'\nimport loginImg from '../login.svg';\n\nimport './Designthree.css';\n export class Designthree extends React.Component {\n    constructor(props){\n        super(props);\n    }\n    render(){\n    return (\n    <div className=\"container-main1\">\n        <label>Navbars</label>\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" href=\"#\">ICONE</a>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\">Features</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\">Pricing</a>\n                    </li>\n                    <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Dropdown link\n                        </a>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                            <a class=\"dropdown-item\" href=\"#\">Action</a>\n                            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    </div>\n      \n    )\n}\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport \"./components/DesignOne.css\";\nimport { Designone } from \"./components/Designone\";\nimport \"./components/Designtwo.css\";\nimport { Designtwo } from './components/Designtwo';\nimport \"./components/Designthree.css\";\nimport { Designthree } from './components/Designthree';\n\nclass App extends React.Component {\n  constructor(props)\n  {\n    super(props);\n  }\n  render(){\n  return  <div className=\"App\">\n            <div className=\"row\">\n              <div className=\"col-lg-3\">\n              <Designone />\n              <labe>Design One</labe>\n              </div>\n              <div className=\"col-lg-3\">\n              <Designtwo />\n              <labe>Design Two</labe>\n              </div>\n              <div className=\"col-lg-6\">\n              <Designthree />\n              <labe>Design Three</labe>\n              </div>\n            </div>\n            \n          </div>\n    \n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}